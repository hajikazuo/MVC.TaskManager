@using MVC.TaskManager.Models.Enums
@model TaskItem

@{
    ViewBag.Title = "Details";
}

<div class="container-xl">
    <div class="row row-cards">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Task details</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col text-truncate">
                            <a href="#" class="text-body d-block">@Html.DisplayNameFor(model => model.Name)</a>
                            <div class="text-secondary text-truncate mt-n1">@Html.DisplayFor(model => model.Name)</div>
                        </div>
                        <div class="col text-truncate">
                            <a href="#" class="text-body d-block">@Html.DisplayNameFor(model => model.Description)</a>
                            <div class="text-secondary text-truncate mt-n1">@Html.DisplayFor(model => model.Description)</div>
                        </div>
                        <div class="col text-truncate">
                            <a href="#" class="text-body d-block">@Html.DisplayNameFor(model => model.DueDate)</a>
                            <div class="text-secondary text-truncate mt-n1">@Html.DisplayFor(model => model.DueDate)</div>
                        </div>
                        <div class="col text-truncate">
                            <a href="#" class="text-body d-block">@Html.DisplayNameFor(model => model.Status)</a>
                            <div class="text-secondary text-truncate mt-n1">@Html.DisplayFor(model => model.Status)</div>
                        </div>
                        <div class="col text-truncate">
                            <a href="#" class="text-body d-block">@Html.DisplayNameFor(model => model.User.UserName)</a>
                            <div class="text-secondary text-truncate mt-n1">@Html.DisplayFor(model => model.User.UserName)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.SubTasks != null && Model.SubTasks.Count > 0)
        {
            <h2 class="mb-3">Subtasks</h2>
            foreach (var subTask in Model.SubTasks)
            {
                var ribbonColor = subTask.Status switch
                {
                    Status.Pending => "bg-yellow",
                    Status.InProgress => "bg-blue",
                    Status.Completed => "bg-green",
                    Status.Canceled => "bg-red"
                };

                <div class="col-md-6 col-lg-3">

                    <div class="card">
                        <div class="ribbon @ribbonColor">@subTask.Status</div>
                        <div class="card-body">
                            <h3 class="card-title">@subTask.Name</h3>
                            <p class="text-secondary">@subTask.Description</p>
                        </div>
                        <div class="card-footer">
                            @subTask.User
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</div>
