@model TaskRegistrationViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<form asp-action="Create" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DueDate" class="control-label"></label>
        <input asp-for="DueDate" class="form-control" />
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="IsComplete" class="control-label"></label>
        <input asp-for="IsComplete" class="form-check-label" />
        <span asp-validation-for="IsComplete" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Status" class="control-label"></label>
        <select asp-for="Status" class="form-select" asp-items="ViewBag.Status">
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="UserId" class="control-label"></label>
        <select asp-for="UserId" class="form-select" asp-items="ViewBag.UserId">
            <option selected value="">Select user</option>
        </select>
    </div>

    <fieldset>
        <legend>SubTasks:</legend>
        <span asp-validation-for="SubTasks" class="text-danger"></span>
        <div class="form-group">
            <input type="hidden" value="0" id="qtdDiv" name="qtdDiv" />
            <div id="collectionItems">

                @await Html.PartialAsync("_CreateOrEditSubTasks", (Model != null && Model.SubTasks != null ? Model.SubTasks : new List<SubTask>()))

            </div>
            <button type="button" id="btnAddMore" class="btn btn-primary">Add subtask</button>
        </div>
    </fieldset>

    <div class="form-group mt-3">
        <input type="submit" value="Salvar" class="btn btn-secondary" />
        <a class="btn btn-outline-secondary" asp-action="Index">Back to List</a>
    </div>
</form>

@section Scripts {
    <script>
        $('#btnAddMore').click(function () {
            var currentNum = parseFloat($("#qtdDiv").val());
            var numDiv = (currentNum + 1);
            $("#qtdDiv").val(numDiv);
            var divIdName = 'div_' + numDiv + 'SubTask';
            var htmlbtn = '<button type="button" onclick="removeSubTask(\'' + divIdName + '\')"  class="btn-close" aria-label="Close"></button>';

            $.ajax({
                url: '/TaskItem/NewSubTask',
                contentType: 'application/html',
                success: function (html) {
                    var newDiv = document.createElement('div');
                    newDiv.setAttribute('id', divIdName);
                    newDiv.innerHTML = htmlbtn + html;
                    $('#collectionItems').append(newDiv);


                }
            });
        });

        function removeSubTask(divNum) {
            var currentNum = parseFloat($("#qtdDiv").val());
            var numDiv = (currentNum - 1);
            $("#qtdDiv").val(numDiv);

            var oldDiv = document.getElementById(divNum);
            oldDiv.remove();
        }  
    </script>
}