@using MVC.TaskManager.Models.Enums
@model TaskItem

@{
    ViewData["Title"] = "Delete";
}

<div class="container-xl">
    <div class="row row-cards">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title text-danger">Are you sure you want to delete?</h4>
                </div>
                <div class="card-body">
                    <p><strong>@Html.DisplayNameFor(model => model.Name):</strong> @Model.Name</p>
                    <p><strong>@Html.DisplayNameFor(model => model.DueDate):</strong> @Model.DueDate</p>
                    <p><strong>@Html.DisplayNameFor(model => model.Status):</strong> @Model.Status</p>
                    <p>
                        <strong>@Html.DisplayNameFor(model => model.User):</strong>
                        @(Model.User != null ? Model.User.CompleteName : "No user assigned")
                    </p>
                    <p><strong>@Html.DisplayNameFor(model => model.Description):</strong> @Model.Description</p>
                </div>
                <div class="card-footer text-end">
                    <form asp-action="Delete" class="d-flex">
                        <input type="hidden" asp-for="@Model.TaskItemId">
                        <a asp-action="Index" class="btn btn-link">Back to List</a>
                        <button type="submit" class="btn btn-danger ms-auto">Delete</button>
                    </form>
                </div>
            </div>


            @if (Model.SubTasks != null && Model.SubTasks.Count > 0)
            {
                <div class="alert alert-danger mt-3" role="alert">
                    Subtasks will also be deleted!!
                </div>


                <h2 class="my-3">Subtasks</h2>
                foreach (var subTask in Model.SubTasks)
                {
                    var ribbonColor = subTask.Status switch
                    {
                        Status.Pending => "bg-yellow",
                        Status.InProgress => "bg-blue",
                        Status.Completed => "bg-green",
                        Status.Canceled => "bg-red"
                    };

                    <div class="col-md-6 col-lg-3">

                        <div class="card">
                            <div class="ribbon @ribbonColor">@subTask.Status</div>
                            <div class="card-body">
                                <h3 class="card-title">@subTask.Name</h3>
                                <p class="text-secondary">@subTask.Description</p>
                            </div>
                            <div class="card-footer">
                                @(subTask.User != null ? subTask.User.CompleteName : "No user assigned")
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
